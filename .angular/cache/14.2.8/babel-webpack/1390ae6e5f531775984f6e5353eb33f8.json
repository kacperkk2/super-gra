{"ast":null,"code":"import { AppSettings, GameState } from '../appSettings.module';\nimport { NotesClientService } from '../services/notes-client.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialog } from '../dialogs/dialogs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/notes-client.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/list\";\nimport * as i10 from \"@angular/material/radio\";\nimport * as i11 from \"../game/pipe\";\n\nfunction GameSettingsComponent_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function GameSettingsComponent_button_10_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const member_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.moveFrom1To2(member_r4));\n    });\n    i0.ɵɵelementStart(1, \"div\", 16)(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"mat-icon\", 17);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const member_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", member_r4, \" \");\n  }\n}\n\nfunction GameSettingsComponent_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function GameSettingsComponent_button_16_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const member_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.moveFrom2To1(member_r7));\n    });\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵelement(2, \"mat-icon\", 18);\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const member_r7 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", member_r7, \" \");\n  }\n}\n\nfunction GameSettingsComponent_mat_radio_button_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r10, \" \");\n  }\n}\n\nfunction GameSettingsComponent_mat_radio_button_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r11, \" \");\n  }\n}\n\nexport let GameSettingsComponent = /*#__PURE__*/(() => {\n  class GameSettingsComponent {\n    constructor(router, notesClient, dialog) {\n      this.router = router;\n      this.notesClient = notesClient;\n      this.dialog = dialog;\n      this.users = [];\n      this.notes = [];\n      this.team1 = [];\n      this.team2 = [];\n      this.timeForTurn = AppSettings.DEFAULT_ROUND_TIME;\n      this.messedCardStrategy = AppSettings.DEFAULT_MESSED_CARD_STRATEGY;\n      this.messedCardOptions = AppSettings.MESSED_CARD_OPTIONS;\n      this.startStrategy = AppSettings.DEFAULT_START_STRATEGY;\n      this.startOptions = AppSettings.START_OPTIONS;\n    }\n\n    ngOnInit() {\n      if (localStorage.getItem(GameState.HOST) != \"true\") {\n        this.router.navigate([\"\"]);\n      } // ustawienie w bazie ze trwa gra?\n\n\n      this.notesClient.getUsers().subscribe(fetchedUsers => {\n        this.users = fetchedUsers.map(user => user.username);\n      });\n      this.notesClient.getNotes().subscribe(fetchedNotes => {\n        this.notes = fetchedNotes.map(note => note.content);\n        console.log(this.notes);\n      });\n      this.users = this.shuffle(this.users); // this.users = [\"kacper\", \"klaudia\", \"witko\", \"witkorrrrr\", \"tomaasz\", \"firankamen\"];\n      // this.users = this.shuffle(this.users);\n\n      this.team1 = this.users.slice(0, Math.floor(this.users.length / 2));\n      this.team2 = this.users.slice(Math.floor(this.users.length / 2));\n    }\n\n    moveFrom1To2(memberToMove) {\n      this.team1 = this.team1.filter(member => member != memberToMove);\n      this.team2.push(memberToMove);\n    }\n\n    moveFrom2To1(memberToMove) {\n      this.team2 = this.team2.filter(member => member != memberToMove);\n      this.team1.push(memberToMove);\n    }\n\n    startGame() {\n      this.showStartGameConfirmDialog().subscribe(close => {\n        if (close == true) {\n          let navigationExtras = {\n            queryParams: {\n              team1: this.team1,\n              team2: this.team2,\n              notes: this.notes,\n              startStrategy: this.startStrategy,\n              messedCardStrategy: this.messedCardStrategy,\n              timeForTurn: this.timeForTurn\n            }\n          };\n          this.router.navigate([\"game\"], navigationExtras);\n        }\n      });\n    }\n\n    shuffle(a) {\n      var j, x, i;\n\n      for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n      }\n\n      return a;\n    }\n\n    addTime() {\n      this.timeForTurn += 5;\n    }\n\n    subTime() {\n      this.timeForTurn -= 5;\n    }\n\n    showStartGameConfirmDialog() {\n      const dialogRef = this.dialog.open(ConfirmDialog, {\n        width: '60%',\n        data: 'Czy na pewno przejść do gry? Ustawień nie będzie można już zmienić'\n      });\n      return dialogRef.afterClosed();\n    }\n\n  }\n\n  GameSettingsComponent.ɵfac = function GameSettingsComponent_Factory(t) {\n    return new (t || GameSettingsComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.NotesClientService), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  GameSettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameSettingsComponent,\n    selectors: [[\"app-game-settings\"]],\n    decls: 43,\n    vars: 9,\n    consts: [[\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"nav\"], [1, \"nav-title\"], [\"fxLayout\", \"column\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-evenly center\"], [1, \"team-header\"], [1, \"team-holder\"], [\"class\", \"player\", \"mat-stroked-button\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"setting-title\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"fontIcon\", \"horizontal_rule\"], [\"fontIcon\", \"add\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\"], [\"fxLayout\", \"row\", \"fxFlexFill\", \"\", \"fxLayoutAlign\", \"space-evenly start\"], [\"fxLayout\", \"column center\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"radio-button\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-stroked-button\", \"\", 1, \"player\", 3, \"click\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\"], [\"fxLayoutAlign\", \"center center\", \"fontIcon\", \"arrow_forward\", 1, \"player-icon\"], [\"fxLayoutAlign\", \"center center\", \"fontIcon\", \"arrow_back\", 1, \"player-icon\"], [1, \"radio-button\", 3, \"value\"]],\n    template: function GameSettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Ustawienia gry\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\")(6, \"div\", 4);\n        i0.ɵɵtext(7, \"Zesp\\u00F3\\u0142 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"mat-list\");\n        i0.ɵɵtemplate(10, GameSettingsComponent_button_10_Template, 5, 1, \"button\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\")(12, \"div\", 4);\n        i0.ɵɵtext(13, \"Zesp\\u00F3\\u0142 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 5)(15, \"mat-list\");\n        i0.ɵɵtemplate(16, GameSettingsComponent_button_16_Template, 5, 1, \"button\", 6);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(17, \"div\")(18, \"p\", 7);\n        i0.ɵɵtext(19, \"Czas pojedynczej tury: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 3)(21, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function GameSettingsComponent_Template_button_click_21_listener() {\n          return ctx.subTime();\n        });\n        i0.ɵɵelement(22, \"mat-icon\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\");\n        i0.ɵɵtext(24);\n        i0.ɵɵpipe(25, \"formatTime\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function GameSettingsComponent_Template_button_click_26_listener() {\n          return ctx.addTime();\n        });\n        i0.ɵɵelement(27, \"mat-icon\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"div\", 11)(29, \"div\", 12)(30, \"div\")(31, \"p\", 7);\n        i0.ɵɵtext(32, \"Po spaleniu has\\u0142a: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"mat-radio-group\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function GameSettingsComponent_Template_mat_radio_group_ngModelChange_33_listener($event) {\n          return ctx.messedCardStrategy = $event;\n        });\n        i0.ɵɵtemplate(34, GameSettingsComponent_mat_radio_button_34_Template, 2, 2, \"mat-radio-button\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\")(36, \"p\", 7);\n        i0.ɵɵtext(37, \"Kto zaczyna rund\\u0119 1? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"mat-radio-group\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function GameSettingsComponent_Template_mat_radio_group_ngModelChange_38_listener($event) {\n          return ctx.startStrategy = $event;\n        });\n        i0.ɵɵtemplate(39, GameSettingsComponent_mat_radio_button_39_Template, 2, 2, \"mat-radio-button\", 14);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(40, \"div\", 11)(41, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function GameSettingsComponent_Template_button_click_41_listener() {\n          return ctx.startGame();\n        });\n        i0.ɵɵtext(42, \"Rozpocznij gr\\u0119\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.team1);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.team2);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(25, 7, ctx.timeForTurn), \" \");\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.messedCardStrategy);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messedCardOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.startStrategy);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.startOptions);\n      }\n    },\n    dependencies: [i4.NgForOf, i5.MatButton, i6.NgControlStatus, i6.NgModel, i7.DefaultLayoutDirective, i7.DefaultLayoutAlignDirective, i7.FlexFillDirective, i8.MatIcon, i9.MatList, i10.MatRadioGroup, i10.MatRadioButton, i11.FormatTimePipe],\n    styles: [\".team-holder[_ngcontent-%COMP%]{border:1px solid black;height:200px;width:130px;max-width:100%;overflow:auto}.team-header[_ngcontent-%COMP%]{text-align:center;background-color:#000;color:#fff}.setting-title[_ngcontent-%COMP%]{text-align:center}.radio-button[_ngcontent-%COMP%]{margin-bottom:10px}.player[_ngcontent-%COMP%]{width:100%}.player-icon[_ngcontent-%COMP%]{font-size:14px}\"]\n  });\n  return GameSettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}