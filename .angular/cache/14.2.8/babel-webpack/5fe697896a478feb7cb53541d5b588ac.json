{"ast":null,"code":"import { AppSettings } from '../appSettings.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/notes-client.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/flex-layout/flex\";\nimport * as i6 from \"@angular/material/divider\";\nimport * as i7 from \"@angular/material/list\";\nimport * as i8 from \"./pipe\";\n\nfunction GameComponent_div_3_mat_list_item_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const member_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r7, \" \");\n  }\n}\n\nfunction GameComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5)(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"formatTime\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"mat-divider\", 6);\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵtext(8, \"czas na tur\\u0119 \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 5)(10, \"div\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"mat-divider\", 6);\n    i0.ɵɵelementStart(13, \"div\");\n    i0.ɵɵtext(14, \"pozosta\\u0142e has\\u0142a\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 5)(16, \"mat-list\", 7);\n    i0.ɵɵtemplate(17, GameComponent_div_3_mat_list_item_17_Template, 2, 1, \"mat-list-item\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"mat-divider\", 6);\n    i0.ɵɵelementStart(19, \"div\");\n    i0.ɵɵtext(20, \"gracze tej tury \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"div\", 9)(22, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_3_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.goToPreStart());\n    });\n    i0.ɵɵtext(23, \" Dalej \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 3, ctx_r0.timeForTurn), \" \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.notesLeftInRound.length, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.teams[ctx_r0.whoNowPlays]);\n  }\n}\n\nfunction GameComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 12)(2, \"div\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"formatTime\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 14)(6, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_4_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.goToTurn());\n    });\n    i0.ɵɵtext(7, \" Rozpocznij rund\\u0119! \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 1, ctx_r1.counter));\n  }\n}\n\nfunction GameComponent_div_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19)(2, \"div\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"uppercase\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 21)(6, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_5_div_5_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.messedCard());\n    });\n    i0.ɵɵtext(7, \" X \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_5_div_5_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.guessedCard());\n    });\n    i0.ɵɵtext(9, \" V \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, ctx_r12.currentCard), \" \");\n  }\n}\n\nfunction GameComponent_div_5_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_5_div_6_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.nextCard());\n    });\n    i0.ɵɵtext(2, \" Poka\\u017C has\\u0142o \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction GameComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 12)(2, \"div\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"formatTime\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, GameComponent_div_5_div_5_Template, 10, 3, \"div\", 16);\n    i0.ɵɵtemplate(6, GameComponent_div_5_div_6_Template, 3, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 3, ctx_r2.counter));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.stateInTurn == ctx_r2.inTurnAllStates.CARD_VIEW);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.stateInTurn == ctx_r2.inTurnAllStates.EMPTY_VIEW);\n  }\n}\n\nfunction GameComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"div\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"mat-divider\", 6);\n    i0.ɵɵelementStart(8, \"div\");\n    i0.ɵɵtext(9, \"zgadni\\u0119te has\\u0142a w turze\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 9)(11, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_6_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.goToNewTurnOrNewRound());\n    });\n    i0.ɵɵtext(12, \" Dalej \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.notesLeftInRound.length == 0 ? \"Wszystkie has\\u0142a zosta\\u0142y zgadni\\u0119te\" : \"Koniec tury\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.inTurnScore, \" \");\n  }\n}\n\nfunction GameComponent_div_7_mat_list_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const member_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r23, \" \");\n  }\n}\n\nfunction GameComponent_div_7_mat_list_item_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const member_r24 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r24, \" \");\n  }\n}\n\nfunction GameComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 25)(7, \"mat-list\");\n    i0.ɵɵtemplate(8, GameComponent_div_7_mat_list_item_8_Template, 2, 1, \"mat-list-item\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-list\");\n    i0.ɵɵtemplate(12, GameComponent_div_7_mat_list_item_12_Template, 2, 1, \"mat-list-item\", 8);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"div\", 9)(14, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_7_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.goToBeforeTurnOrAfterGame());\n    });\n    i0.ɵɵtext(15, \" Dalej \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", \"Koniec rundy \" + ctx_r4.currentRound, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", \"+\" + ctx_r4.pointsInRound[0], \" \", \"+\" + ctx_r4.pointsInRound[1], \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.teams[0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r4.totalPoints[0] + \" : \" + ctx_r4.totalPoints[1], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.teams[1]);\n  }\n}\n\nfunction GameComponent_div_8_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", \"Remis!\", \" \");\n  }\n}\n\nfunction GameComponent_div_8_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate4(\" \", \"Gurom: \", \" \", ctx_r28.totalPoints[0] > ctx_r28.totalPoints[1] ? ctx_r28.teams[0] : ctx_r28.teams[1], \" \", \"Do\\u0142em: \", \" \", ctx_r28.totalPoints[0] > ctx_r28.totalPoints[1] ? ctx_r28.teams[1] : ctx_r28.teams[0], \" \");\n  }\n}\n\nfunction GameComponent_div_8_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r29.totalPoints[0] > ctx_r29.totalPoints[1] ? ctx_r29.totalPoints[0] : ctx_r29.totalPoints[1] + \" : \" + (ctx_r29.totalPoints[0] > ctx_r29.totalPoints[1]) ? ctx_r29.totalPoints[1] : ctx_r29.totalPoints[0], \" \");\n  }\n}\n\nfunction GameComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, GameComponent_div_8_div_4_Template, 2, 1, \"div\", 26);\n    i0.ɵɵtemplate(5, GameComponent_div_8_div_5_Template, 2, 4, \"div\", 26);\n    i0.ɵɵtemplate(6, GameComponent_div_8_div_6_Template, 2, 1, \"div\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 9)(8, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function GameComponent_div_8_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.goToMain());\n    });\n    i0.ɵɵtext(9, \" Ekran g\\u0142\\u00F3wny \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", \"Koniec gry!\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.totalPoints[0] == ctx_r5.totalPoints[1]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.totalPoints[0] != ctx_r5.totalPoints[1]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.totalPoints[0] != ctx_r5.totalPoints[1]);\n  }\n}\n\nexport let GameComponent = /*#__PURE__*/(() => {\n  class GameComponent {\n    constructor(route, router, notesClient) {\n      this.route = route;\n      this.router = router;\n      this.notesClient = notesClient; // const data\n\n      this.timeForTurn = 0;\n      this.teams = [];\n      this.notes = [];\n      this.roundNames = AppSettings.ROUND_NAMES;\n      this.messedCardStrategy = \"\"; // data\n\n      this.notesLeftInRound = [];\n      this.totalPoints = [];\n      this.pointsInRound = [];\n      this.whoStartsRound = TURN.TEAM1;\n      this.whoNowPlays = TURN.TEAM1;\n      this.currentRound = 1;\n      this.currentCard = \"\";\n      this.messedCardsInTurn = [];\n      this.inTurnScore = 0;\n      this.counter = 0; // state\n\n      this.state = GAME_STATE.BEFORE_TURN;\n      this.allStates = GAME_STATE;\n      this.stateInTurn = TURN_STATE.CARD_VIEW;\n      this.inTurnAllStates = TURN_STATE;\n    }\n\n    ngOnInit() {\n      this.notesClient.deleteAllUsers().subscribe();\n      this.notesClient.startGame().subscribe();\n      this.state = GAME_STATE.BEFORE_TURN;\n      this.route.queryParams.subscribe(params => {\n        this.teams = [params['team1'], params['team2']];\n        this.notes = params['notes'];\n        this.timeForTurn = params['timeForTurn'];\n        this.messedCardStrategy = params['messedCardStrategy'];\n        this.whoStartsRound = this.getStartStrategy(params['startStrategy']);\n        this.whoNowPlays = this.whoStartsRound;\n      });\n      this.pointsInRound = [0, 0];\n      this.totalPoints = [0, 0];\n      this.notesLeftInRound = this.shuffle([...this.notes]);\n    }\n\n    getStartStrategy(startStrategy) {\n      if (startStrategy == AppSettings.START_RANDOM) {\n        return this.randomIntFromInterval(0, 1);\n      } else if (startStrategy == AppSettings.START_TEAM1) {\n        return TURN.TEAM1;\n      } else if (startStrategy == AppSettings.START_TEAM2) {\n        return TURN.TEAM2;\n      } else {\n        return TURN.TEAM2;\n      }\n    }\n\n    goToPreStart() {\n      this.prepareTimer();\n      this.state = GAME_STATE.PRE_START;\n    }\n\n    goToTurn() {\n      this.nextCard();\n      this.state = GAME_STATE.TURN;\n      this.timerCount();\n    }\n\n    nextCard() {\n      this.currentCard = this.notesLeftInRound.pop();\n      this.stateInTurn = TURN_STATE.CARD_VIEW;\n    }\n\n    messedCard() {\n      if (this.messedCardStrategy == AppSettings.MESSED_CARD_BACK_TO_BUCKET) {\n        this.messedCardsInTurn.push(this.currentCard);\n      } else if (this.messedCardStrategy == AppSettings.MESSED_CARD_POINT_FOR_OPPONENT) {\n        if (this.whoNowPlays == TURN.TEAM1) {\n          this.pointsInRound[TURN.TEAM2]++;\n        } else {\n          this.pointsInRound[TURN.TEAM1]++;\n        }\n      }\n\n      this.afterCardDecision();\n    }\n\n    guessedCard() {\n      this.pointsInRound[this.whoNowPlays]++;\n      this.inTurnScore++;\n      this.afterCardDecision();\n    }\n\n    afterCardDecision() {\n      if (this.notesLeftInRound.length == 0) {\n        this.messedCardsInTurn.forEach(card => this.notesLeftInRound.push(card));\n        this.notesLeftInRound = this.shuffle(this.notesLeftInRound);\n        this.state = GAME_STATE.AFTER_TURN;\n      } else {\n        this.stateInTurn = TURN_STATE.EMPTY_VIEW;\n      }\n    }\n\n    timeEnded() {\n      if (this.stateInTurn == TURN_STATE.CARD_VIEW) {\n        this.messedCardsInTurn.push(this.currentCard);\n      }\n\n      this.messedCardsInTurn.forEach(card => this.notesLeftInRound.push(card));\n      this.notesLeftInRound = this.shuffle(this.notesLeftInRound);\n      this.state = GAME_STATE.AFTER_TURN;\n    }\n\n    goToNewTurnOrNewRound() {\n      if (this.notesLeftInRound.length == 0) {\n        this.totalPoints[0] += this.pointsInRound[0];\n        this.totalPoints[1] += this.pointsInRound[1];\n        this.state = GAME_STATE.AFTER_ROUND;\n      } else {\n        this.prepareDataForNextTurn();\n        this.state = GAME_STATE.BEFORE_TURN;\n      }\n    }\n\n    goToBeforeTurnOrAfterGame() {\n      if (this.currentRound == AppSettings.ROUND_NAMES.length) {\n        this.notesClient.endGame().subscribe();\n        this.state = GAME_STATE.AFTER_GAME;\n      } else {\n        this.prepareDataForNextRound();\n        this.state = GAME_STATE.BEFORE_TURN;\n      }\n    }\n\n    goToMain() {\n      localStorage.clear();\n      this.router.navigate([\"\"]);\n    }\n\n    prepareDataForNextRound() {\n      this.currentRound++;\n      this.whoStartsRound = this.whoStartsRound == TURN.TEAM1 ? TURN.TEAM2 : TURN.TEAM1;\n      this.whoNowPlays = this.whoStartsRound;\n      this.currentCard = \"\";\n      this.messedCardsInTurn = [];\n      this.inTurnScore = 0;\n      this.pointsInRound = [0, 0];\n      this.notesLeftInRound = this.shuffle([...this.notes]);\n      this.stateInTurn = TURN_STATE.EMPTY_VIEW;\n    }\n\n    prepareDataForNextTurn() {\n      this.whoNowPlays = this.whoNowPlays == TURN.TEAM1 ? TURN.TEAM2 : TURN.TEAM1;\n      this.currentCard = \"\";\n      this.messedCardsInTurn = [];\n      this.inTurnScore = 0;\n      this.stateInTurn = TURN_STATE.EMPTY_VIEW;\n    }\n\n    prepareTimer() {\n      this.counter = this.timeForTurn;\n    }\n\n    timerCount() {\n      setTimeout(() => {\n        this.counter -= 1;\n        this.process();\n      }, 1000);\n    }\n\n    process() {\n      if (this.state != GAME_STATE.TURN) {\n        return;\n      }\n\n      if (this.counter == 0) {\n        this.timeEnded();\n      } else {\n        this.timerCount();\n      }\n    }\n\n    formatTimer(seconds) {\n      return seconds;\n    }\n\n    randomIntFromInterval(min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    shuffle(a) {\n      var j, x, i;\n\n      for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n      }\n\n      return a;\n    }\n\n  }\n\n  GameComponent.ɵfac = function GameComponent_Factory(t) {\n    return new (t || GameComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.NotesClientService));\n  };\n\n  GameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameComponent,\n    selectors: [[\"app-game\"]],\n    decls: 9,\n    vars: 8,\n    consts: [[\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"nav\"], [1, \"nav-title\"], [\"fxLayout\", \"column\", \"fxFlexFill\", \"\", 4, \"ngIf\"], [\"fxLayout\", \"column\", \"fxFlexFill\", \"\"], [\"fxFlex\", \"70\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"space-evenly center\", 2, \"background-color\", \"rgb(190, 116, 116)\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"start center\"], [2, \"width\", \"100%\"], [\"fxLayout\", \"row\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 4, \"ngFor\", \"ngForOf\"], [\"fxFlex\", \"30\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"start center\", 2, \"background-color\", \"rgb(119, 190, 116)\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\"], [\"fxFlex\", \"5\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"start center\", 2, \"background-color\", \"rgb(190, 116, 116)\"], [1, \"timer\"], [\"fxFlex\", \"95\", \"fxLayout\", \"row\", \"fxFlexFill\", \"\", 2, \"background-color\", \"rgb(169, 116, 190)\"], [\"mat-raised-button\", \"\", 2, \"width\", \"100%\", 3, \"click\"], [\"fxFlex\", \"95\", \"fxLayout\", \"column\", \"fxFlexFill\", \"\", 4, \"ngIf\"], [\"fxFlex\", \"95\", \"fxLayout\", \"row\", \"fxFlexFill\", \"\", 4, \"ngIf\"], [\"fxFlex\", \"95\", \"fxLayout\", \"column\", \"fxFlexFill\", \"\"], [\"fxFlex\", \"75\", \"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\", 2, \"background-color\", \"rgb(116, 190, 159)\"], [\"id\", \"card\"], [\"fxFlex\", \"20\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between start\", 2, \"background-color\", \"rgb(169, 116, 190)\"], [\"mat-raised-button\", \"\", \"id\", \"messed-card\", 3, \"click\"], [\"mat-raised-button\", \"\", \"id\", \"guessed-card\", 3, \"click\"], [\"fxFlex\", \"95\", \"fxLayout\", \"row\", \"fxFlexFill\", \"\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-evenly center\"], [4, \"ngIf\"]],\n    template: function GameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(3, GameComponent_div_3_Template, 24, 5, \"div\", 2);\n        i0.ɵɵtemplate(4, GameComponent_div_4_Template, 8, 3, \"div\", 2);\n        i0.ɵɵtemplate(5, GameComponent_div_5_Template, 7, 5, \"div\", 2);\n        i0.ɵɵtemplate(6, GameComponent_div_6_Template, 13, 2, \"div\", 2);\n        i0.ɵɵtemplate(7, GameComponent_div_7_Template, 16, 6, \"div\", 2);\n        i0.ɵɵtemplate(8, GameComponent_div_8_Template, 10, 4, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"Runda \", ctx.currentRound, \": \", ctx.roundNames[ctx.currentRound - 1], \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.state == ctx.allStates.BEFORE_TURN);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.state == ctx.allStates.PRE_START);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.state == ctx.allStates.TURN);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.state == ctx.allStates.AFTER_TURN);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.state == ctx.allStates.AFTER_ROUND);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.state == ctx.allStates.AFTER_GAME);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.MatButton, i5.DefaultLayoutDirective, i5.DefaultLayoutAlignDirective, i5.FlexFillDirective, i5.DefaultFlexDirective, i6.MatDivider, i7.MatList, i7.MatListItem, i3.UpperCasePipe, i8.FormatTimePipe],\n    styles: [\"#guessed-card[_ngcontent-%COMP%]{background-color:#32cd32}#messed-card[_ngcontent-%COMP%]{background-color:#dc143ce3}.timer[_ngcontent-%COMP%]{font-size:25px}#card[_ngcontent-%COMP%]{font-size:35px;text-align:center;overflow-wrap:anywhere;white-space:pre-line}\"]\n  });\n  return GameComponent;\n})();\nvar GAME_STATE = /*#__PURE__*/(() => {\n  (function (GAME_STATE) {\n    GAME_STATE[GAME_STATE[\"BEFORE_TURN\"] = 0] = \"BEFORE_TURN\";\n    GAME_STATE[GAME_STATE[\"PRE_START\"] = 1] = \"PRE_START\";\n    GAME_STATE[GAME_STATE[\"TURN\"] = 2] = \"TURN\";\n    GAME_STATE[GAME_STATE[\"AFTER_TURN\"] = 3] = \"AFTER_TURN\";\n    GAME_STATE[GAME_STATE[\"AFTER_ROUND\"] = 4] = \"AFTER_ROUND\";\n    GAME_STATE[GAME_STATE[\"AFTER_GAME\"] = 5] = \"AFTER_GAME\";\n  })(GAME_STATE || (GAME_STATE = {}));\n\n  return GAME_STATE;\n})();\nvar TURN_STATE = /*#__PURE__*/(() => {\n  (function (TURN_STATE) {\n    TURN_STATE[TURN_STATE[\"CARD_VIEW\"] = 0] = \"CARD_VIEW\";\n    TURN_STATE[TURN_STATE[\"EMPTY_VIEW\"] = 1] = \"EMPTY_VIEW\";\n  })(TURN_STATE || (TURN_STATE = {}));\n\n  return TURN_STATE;\n})();\nvar TURN = /*#__PURE__*/(() => {\n  (function (TURN) {\n    TURN[TURN[\"TEAM1\"] = 0] = \"TEAM1\";\n    TURN[TURN[\"TEAM2\"] = 1] = \"TEAM2\";\n  })(TURN || (TURN = {}));\n\n  return TURN;\n})();","map":null,"metadata":{},"sourceType":"module"}